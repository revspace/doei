#!/usr/bin/perl
use strict;
use experimental qw(signatures);
no warnings;

{
    # Force Curses::UI to use high resolution timer, because mqtt
    # doesn't work reliably with full-second intervals.
    package Curses::UI;
    use Time::HiRes qw(time);
}
use Curses;
use Curses::UI 0.9608;
use Net::MQTT::Simple;

{
    # Never use reverse video for window titles, because that's confusing when
    # there's also a listbox lightbar.
    my $orig_new = \&Curses::UI::Widget::new;
    *Curses::UI::Widget::new = sub {
        push @_, -titlereverse => 0;
        goto &$orig_new;
    };
}

my $title = "iButton handmatig uitchecken of inchecken [n = %d]",
my $n = 0;

my $mqtt = Net::MQTT::Simple->new("mosquitto.space.revspace.nl");

my $ui = Curses::UI->new(-compat => 0, -color_support => 1);
$SIG{__DIE__} = sub { $ui->dialog(-message => @_); exit; };

my $window = $ui->add(undef,  'Window');

sub check_out($ibutton) {
    $ui->dialog(
        -message => "Weet je zeker dat $ibutton weg is?",
        -title => "Bevestiging",
        -buttons => [
            { -label => '[Nee, toch niet]', -value => 0 },
            { -label => '[Ja, doei!]', -value => 1 },
        ],
    ) or return;

    $mqtt->publish("revspace-local/doorduino/doeidoei/unlocked", $ibutton);
}

sub check_in() {
    $ui->dialog(
        -title        => "Waarschuwing!",
        -message      => "Let op: als je je iButton KWIJT bent,\n"
            . "meld het dan meteen aan board\@revspace.nl!\n\n"
    );
    my $naam = $ui->question(
        -title        => "Wat is JOUW nickname?",
        -question     => "Voer je eigen nickname in.\n"
            . "Let op: spel je nickname EXACT zoals ie ook in de doorduino staat!\n"
            . "De naam die je invoert wordt gebruikt zonder enige verificatie.",
    ) // return;

    if ($naam !~ /^(?:[A-Za-z0-9_-]++)\z/) {
        $ui->dialog(-message => "Ongeldige naam.");
        return;
    }

    $ui->dialog(
        -title => "Verklaring",
        -message =>
            "$naam is:\n" .
            "   1. Deelnemer van Stichting Revelation Space.\n" .
            "en 2. *Nu* aanwezig op de space.\n" .
            "en 3. Exact dezelfde spelling als in de doorduino.",
        -buttons => [
            { -label => '[Nee, toch niet]', -value => 0 },
            { -label => "[Ja, alle 3 waar]",  -value => 1 },
        ],
    ) or return;

    $mqtt->publish("revspace-local/doorduino/ibutton-vergeten/unlocked", $naam);
}

sub check_in_guest() {
    my $naam = $ui->question(
        -title        => "Wie is daar?",
        -question     => "Voer de nickname van de gast in\n"
    ) // return;
    $naam =~ s/\s/_/g;

    if ($naam !~ /^(?:[A-Za-z0-9_-]++)\z/) {
        $ui->dialog(-message => "Ongeldige naam.");
        return;
    }

    my $opt_in = $ui->dialog(
        -title => "Opt-in",
        -message => "Geeft de gast toestemming om dies nickname openbaar te\n"
            . "vermelden zodat iedereen kan zien dat die op de space is?\n\n"
            . "Op de space en in de logs is de naam sowieso zichtbaar.",
        -buttons => [
            { -label => "[Ja]",  -value => 1 },
            { -label => '[Nee]', -value => 0 },
            { -label => '[Annuleren]', -value => -999 },
        ],
    );
    return if $opt_in < 0;

    $naam =~ s/^/./ if not $opt_in;
    $mqtt->publish("revspace-local/doorduino/hoi/unlocked", "+$naam");
}

sub tijd {
    my ($timestamp) = @_;

    my $seconds = time() - $timestamp;
    return sprintf "%dh %dm", $seconds / 3600, ($seconds % 3600) / 60 if $seconds > 120;
    return sprintf "net ingecheckt";
}

sub tijdloos($string) {
    # Vieze manier om ze vergelijkbaar te maken
    return $string =~ s/\d+h \d+m|net ingecheckt//r;
}

my $list = $window->add( "ibuttons", "Listbox",
    -title        => sprintf($title, $n),
    -border       => 1,
    -pad          => 1,
    -ipadleft     => 1,
    -ipadright    => 1,
    -values       => [qw(screenshot zonder namen want privacy)],
    -vscrollbar   => 'right',
    -onchange     => sub ($self) {
        my $value = $self->get or return;
        $self->clear_selection;

        check_out $1   if $value =~ /^uitchecken: (\S+)/;
        check_in       if $value =~ /^inchecken: deelnemer/;
        check_in_guest if $value =~ /^inchecken: gast/;
    },
);

my %timestamps;
sub update_list {
    my $selected = $list->get_active_value;

    my @values =
        map { sprintf "uitchecken: %-20s %s", $_, tijd($timestamps{$_}) }
        sort { $timestamps{$a} <=> $timestamps{$b} }
        keys %timestamps;

    push @values, "inchecken: deelnemer (iButton vergeten)";
    push @values, "inchecken: gast";
    $list->values(\@values);

    for (0..$#values) {
        $list->{-ypos} = $_ if tijdloos($values[$_]) eq tijdloos($selected);
    }

    $list->title(sprintf($title, $n));
}

$mqtt->subscribe(
    "revspace-local/doorduino/checked-in/unixtime" => sub ($, $message, $) {
       %timestamps = split " ", $message;
       $n = keys %timestamps;
       update_list;
    },
);

update_list;

$ui->set_binding(sub { exit }, $_) for 'q', 'Q', "\e";

$ui->set_timer("mqtt", sub { $mqtt->tick(.05) }, .1);

$ui->set_timer("update", \&update_list, 5);

$ui->mainloop;
