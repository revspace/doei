#!/usr/bin/perl
use strict;
no warnings;
{
    # Force Curses::UI to use high resolution timer, because mqtt
    # doesn't work reliably with full-second intervals.
    package Curses::UI;
    use Time::HiRes qw(time);
}
use Curses;
use Curses::UI 0.9608;
use Net::MQTT::Simple;

my $mqtt = Net::MQTT::Simple->new("test.mosquitto.org");

my $ui = Curses::UI->new(-compat => 0, -color_support => 1);
my $window = $ui->add(undef,  'Window');
my $in_modal = 0;

my $list;
$list = $window->add("ibuttons", "Listbox",
    -title => "iButton geforceerd uitchecken",
    -border => 1,
    -pad => 1,
    -ipadleft => 1,
    -ipadright => 1,
    -values => [ ],
    -onchange => sub {
        my ($self) = @_;
        my $ibutton = $self->get or return;
        $self->clear_selection;
        my $answer = $ui->dialog(
            -message => "Weet je zeker dat $ibutton weg is?",
            -title => "Bevestiging",
            -titlereverse => 0,
            -buttons => [
                {-label => '[Nee, toch niet]', -value => 0},
                {-label => '[Ja, doei!]', -value => 1},
            ],
        );
        if ($answer) {
            $mqtt->publish("revspace-local/doorduino/doei/unlocked", $ibutton);
            $ui->dialog(
                -message => "$ibutton is uitgecheckt",
                -title => "Nou dag he",
                -titlereverse => 0,
                -buttons => [
                    {-label => '[OK, DOEI]', -value => 1},
                ],
            );
        }
    },
    -titlereverse => 0,
    -vscrollbar => 'right',
);

$mqtt->subscribe(
    "revspace-local/doorduino/checked-in" => sub {
        my ($topic, $message) = @_;
        my $selected = $list->get_active_value;

        my @names = sort { lc($a) cmp lc($b) } split " ", $message;
        $list->values(\@names);

        for (0..$#names) {
            $list->{-ypos} = $_ if $names[$_] eq $selected;
        }
    },
);

$ui->set_binding(sub { exit }, $_) for 'q', 'Q', "\e";

$ui->set_timer("mqtt", sub { $mqtt->tick(.05) }, .1);

$ui->mainloop;
